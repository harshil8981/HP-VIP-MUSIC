
#!/bin/bash

pprint (){
	cred='\033[0;31m'
	cgreen='\033[0;32m'
	cyellow='\033[0;33m'
	cblue='\033[0;34m'
	cpurple='\033[0;35m'
	eval "export color='$cpurple'"
	[ ! -z $2 ] && eval "export color=\"\$$2\""
    printf "$color $1"
}

color_reset(){ printf '\033[0;37m';}

yesnoprompt(){
	old_stty_cfg=$(stty -g)
	stty raw -echo ; answer=$(head -c 1)
	stty $old_stty_cfg
	echo "$answer" | grep -iq "^y"
}

update() {
	pprint "\n\n𝐔𝐩𝐝𝐚𝐭𝐢𝐧𝐠 𝐕𝐢𝐩 𝐌𝐮𝐬𝐢𝐜 𝐏𝐚𝐜𝐤𝐚𝐠𝐞 𝐋𝐢𝐬𝐭😎.. "
	sudo apt update 2>&1 | grep "can be upgraded" &>/dev/null
	if [ $? -eq 0 ]; then
		pprint "𝗨𝗽𝗱𝗮𝘁𝗲 𝗔𝘃𝗮𝗶𝗹𝗮𝗯𝗹𝗲..🖕" "cgreen"
		pprint "\n\𝙳𝙾 𝚈𝙾𝚄 𝚆𝙰𝙽𝚃 𝚃𝙾 𝙰𝚄𝚃𝙾 𝚄𝙿𝙶𝚁𝙰𝙳𝙴🥱..? (y/n)?"
		if yesnoprompt; then
			pprint "\n\n𝐔𝐩𝐠𝐫𝐚𝐝𝐢𝐧𝐠 𝐏𝐚𝐜𝐤𝐚𝐠𝐞𝐬😉.. "
			sudo apt upgrade -y &>/dev/null &&
			pprint "🇩 🇴 🇳 🇪 ✅!\n\n" "cgreen" || (pprint "🇫 🇦 🇮 🇱 ❎.\n\n" "cred"; exit 1)
		else
			echo
		fi
	else
		pprint "🇦𝐥𝐫𝐞𝐚𝐝𝐲 🇺𝐩 🇹𝐨 🇩𝐚𝐭𝐞\n\n" "cgreen"
	fi
}

packages(){
	if ! command -v pip &>/dev/null; then
		pprint "ᴄᴏᴜʟᴅ ɴᴏᴛ ғɪɴᴅ ᴘɪᴘ, เɳรƭαℓℓเɳɠ ɳσω🤧..."
		sudo apt install python3-pip -y 2>pypilog.txt 1>/dev/null &&
		pprint "𝐇𝐄𝐇𝐄 𝐃𝐎𝐍𝐄✔.\n\n" "cgreen" || (pprint "𝐎𝐏𝐒 𝐅𝐀𝐈𝐋𝐄𝐃❌.\n\n" "cred"; exit 1)
	fi

	if ! command -v ffmpeg &>/dev/null; then
		pprint "СѲƱᏓD ŊѲƭ ƒσυηD ғғᴍᴘᴇɢ, 𝐈𝐧𝐬𝐭𝐚𝐥𝐥𝐢𝐧𝐠 𝐍𝐨𝐰🙂..."
		if sudo apt install ffmpeg -y &>/dev/null;then
			pprint "✌️ 🇩 🇴 🇳 🇪   🇧 🇦 🇧 🇾 ✌️ .\n\n" "cgreen"
		else
			pprint "🇫 🇦 🇮 🇱 🇪 🇩 😗.\n\n" "cred"
			pprint "You need to install ffmpeg manually in order to deploy VipX Music, exiting...\n" "cblue"
			exit 1
		fi
	fi

	# Check ffmpeg version and warn user if necessary.
	fv=$(grep -Po 'version (3.*?) ' <<< $(ffmpeg -version)) &&
	pprint "Playing live streams not going to work since you have ffmpeg $fv, live streams are supported by version 4+.\n" "cblue"
}


node(){
	command -v npm &>/dev/null && return
	pprint "𝐈𝐧𝐬𝐭𝐚𝐥𝐥𝐢𝐧𝐠 𝐍𝐨𝐝𝐞𝐣𝐬 and 𝐍𝐩𝐦😅..  "
	curl -fssL https://deb.nodesource.com/setup_18.x | sudo -E bash - &>nodelog.txt &&
	sudo apt install nodejs -y &>>nodelog.txt &&
	sudo npm i -g npm &>>nodelog.txt &&
	pprint "𝗦𝘂𝗰𝗰𝗲𝘀𝘀!\n" "cgreen" || (pprint "FAIL.\n" "cred"; exit 1)
}


installation(){
	pprint "\n\n𝗨𝗽𝗴𝗿𝗮𝗱𝗶𝗻𝗴 𝗽𝗶𝗽 𝗔𝗻𝗱 𝗜𝗻𝘀𝘁𝗮𝗹𝗹𝗶𝗻𝗴 𝗗𝗲𝗽𝗲𝗻𝗱𝗲𝗰𝘆 𝗣𝗮𝗸𝗮𝗴𝗲𝘀📍..."
	pip3 install -U pip &>>pypilog.txt &&
	pip3 install -U -r requirements.txt &>>pypilog.txt &&
	pprint "𝐃𝐨𝐧𝐞💞.\n" "cgreen" && return
	pprint "𝐅𝐚𝐢𝐥𝐞𝐝😭.\n" "cred"
	exit 1
}

clear
pprint "🇼𝐄𝐋𝐂𝐎𝐌𝐄 🇹𝐎 🇻𝐈𝐏 🇲𝐔𝐒𝐈𝐂 🇸𝐄𝐓𝐔𝐏 🇮𝐍𝐒𝐓𝐀𝐋𝐋𝐄𝐑\n\n"
pprint "💝𝐈𝗳 𝐘𝗼𝘂 𝐒𝗲𝗲 𝐀𝗻𝘆 𝐄𝗿𝗿𝗼𝗿 𝐃𝘂𝗿𝗶𝗻𝗴 𝐈𝗻𝘀𝘁𝗮𝗹𝗹𝗮𝘁𝗶𝗼𝗻 𝐏𝗿𝗼𝗰𝗲𝘀𝘀, 𝐏𝗹𝗲𝗮𝘀𝗲 𝐑𝗲𝗳𝗲𝗿 𝐓𝗼 𝐓𝗵𝗲𝘀𝗲 𝐅𝗶𝗹𝗲𝘀 𝐅𝗼𝗿 𝐋𝗼𝗴𝘀:🇮🇳 "
pprint "\n♥𝐅𝗼𝗿 𝐍𝗼𝗱𝗲 𝐉𝘀 𝐄𝗿𝗿𝗼𝗿𝘀 , 𝐂𝗵𝗲𝗰𝗸𝗼𝘂𝘁 𝐍𝗼𝗱𝗲𝗹𝗼𝗴.𝘁𝘅𝘁🗯"
pprint "\n🤍𝐅𝗼𝗿 𝐏𝘆𝗽𝗶 𝐏𝗮𝗰𝗸𝗮𝗴𝗲𝘀 𝐄𝗿𝗿𝗼𝗿𝘀 , 𝐂𝗵𝗲𝗰𝗸𝗼𝘂𝘁 𝐏𝘆𝗽𝗶𝗹𝗼𝗴.𝘁𝘅𝘁💭"
sleep 1
pprint "\n\sᴄʀɪᴘᴛ ɴᴇᴇᴅs sᴜᴅᴏ ᴘʀɪᴠɪʟᴇɢᴇs ɪɴ ᴏʀᴅᴇʀ ᴛᴏ ᴜᴘᴅᴀᴛᴇ & ɪɴsᴛᴀʟʟ ᴘᴀᴄᴋᴀɢᴇs😼.\n"
sudo test

update
packages
node
installation
pprint "\n\n\n\n\n🇻 🇮 🇵   🇲 🇺 🇸 🇮 🇨   🇧 🇴 🇹 " "cgreen"
sleep 1
clear

pprint "\n𝐄𝐧𝐭𝐞𝐫 𝐘𝐨𝐮𝐫 𝐁𝐨𝐭 𝐃𝐚𝐭𝐚 𝐁𝐞𝐥𝐨𝐰\n\n\n"
pprint "\n𝗔𝗣𝗜 𝗜𝗗:- "; color_reset; read api_id
pprint "\n𝗔𝗣𝗜 𝗛𝗔𝗦𝗛:- "; color_reset; read api_hash
pprint "\n𝗕𝗢𝗧 𝗧𝗢𝗞𝗘𝗡:- "; color_reset; read bot_token
pprint "\n𝗢𝗪𝗡𝗘𝗥 𝗜𝗗:- "; color_reset; read ownid
pprint "\n𝗕𝗢𝗧 𝗡𝗔𝗠𝗘:- "; color_reset; read mbt
pprint "\n𝗠𝗢𝗡𝗚𝗢 𝗗𝗕:- "; color_reset; read mongo_db
pprint "\n𝗟𝗢𝗚 𝗚𝗥𝗢𝗨𝗣 𝗜𝗗:- "; color_reset; read logger
pprint "\n𝗦𝗧𝗥𝗜𝗡𝗚 𝗦𝗘𝗦𝗦𝗜𝗢𝗡:- "; color_reset; read string_session
pprint "\n𝗚𝗥𝗢𝗨𝗣 𝗨𝗦𝗘𝗥𝗡𝗔𝗠𝗘:- "; color_reset; read your_group
pprint "\n𝗖𝗛𝗔𝗡𝗡𝗘𝗟 𝗨𝗦𝗘𝗥𝗡𝗔𝗠𝗘:- "; color_reset; read your_channel

pprint "\n\𝐧🍷𝐋𝐨𝐚𝐝𝐢𝐧𝐠 𝐘𝐨𝐮𝐫 𝐕𝐚𝐫𝐬, 𝐏𝐥𝐞𝐚𝐬𝐞 𝐖𝐚𝐢𝐭 𝐁𝐚𝐛𝐲♨️" "cgreen"

if [ -f .env ]; then
	rm .env
fi

echo """API_ID = $api_id
API_HASH = $api_hash
BOT_TOKEN = $bot_token
MONGO_DB_URI = $mongo_db
LOG_GROUP_ID = $logger
YOUR_GROUP = $your_group
YOUR_CHANNEL = $your_channel
MUSIC_BOT_NAME = $mbt
STRING_SESSION = $string_session
OWNER_ID = $ownid""" > .env
clear

pprint "\n\n\n\n\n\n\n\n    __      _______ _____    ___  __ _    _  _____ _____ _____   _____   ____ _______ \n    \ \    / /_   _|  __ \   |  \/  | |  | |/ ____|_   _/ ____|  |  _ \ / __ \__   __|\n     \ \  / /  | | | |__) |  | \  / | |  | | (___   | || |       | |_) | |  | | | |   \n      \ \/ /   | | |  ___/   | |\/| | |  | |\___ \  | || |       |  _ <| |  | | | |   \n       \  /   _| |_| |       | |  | | |__| |____) |_| || |____   | |_) | |__| | | |   \n        \/   |_____|_|       |_|  |_|\____/|_____/|_____\_____|  |____/ \____/  |_|   " 
pprint "\n\n\n\n\\n𝐍𝐎𝐖 𝐒𝐓𝐀𝐑𝐓 𝐓𝐇𝐄 𝐁𝐎𝐓 𝐁𝐘 𝐏𝐔𝐓 𝐓𝐖𝐎 𝐂𝐎𝐌𝐌𝐀𝐍𝐃 \n\n 1𝐬𝐭 𝐂𝐨𝐦𝐦𝐚𝐧𝐝:- tmux \n 2𝐧𝐝 𝐂𝐨𝐦𝐦𝐚𝐧𝐝:- bash start\n\n"
